-
    const _ = self.require('lodash');

    const toDashCase = (str = '') => str.trim().toLowerCase().replace(/[\s_]/g, '-');

    const prefix = (...strings) => strings.filter(Boolean).map((str) => `${self.config.prefix}-${toDashCase(str)}`).join(' ');

    const flatten = (object) => {
        let obj = {};

        if(_.isPlainObject(object)) {
            _.forEach(Object.keys(object), (a) => {
                let val = object[a];

                if(a === 'prefix') {
                    val = prefix.apply(null, val.split(' '));
                    
                    obj.class = obj.class ? [obj.class, val].join(' ') : val;
                } else if(_.isPlainObject(val) && !/^!/.test(a)) {
                    let flat = flatten(val);

                    _.forEach(Object.keys(flat), (b) => obj[`${a}-${b}`] = flat[b]);
                } else {
                    if(/^!/.test(a)) {
                        obj[a.replace(/^!/, '')] = object[a];
                    } else {
                        obj[a] = object[a];
                    }
                }
            });
        }

        return obj;
    }

    const attrs = (obj) => _.isPlainObject(obj) ? flatten(obj.attrs) : undefined;

    const isShorthand = (val) => _.isString(val) || _.isNumber(val);

    const random = () => prefix(_.toString(_.random(0, 100000000)));