-
    const lowerDash = (str = '') => str.trim().toLowerCase().replace(/[\s_]/g, '-');

    const prefix = (...strings) => strings.filter(Boolean).map((str) => `${self.config.prefix}-${lowerDash(str)}`).join(' ');

    const flatten = (object) => {
        let obj = {};

        if(isObject(object)) {
            Object.keys(object).forEach((a) => {
                let val = object[a];

                if(a === 'prefix') {
                    val = prefix.apply(null, val.split(' '));
                    
                    obj.class = obj.class ? [obj.class, val].join(' ') : val;
                } else if(isObject(val) && !/^!/.test(a)) {
                    let flat = flatten(val);

                    Object.keys(flat).forEach((b) => {
                        obj[`${a}-${b}`] = flat[b];
                    });
                } else {
                    if(/^!/.test(a)) {
                        obj[a.replace(/^!/, '')] = object[a];
                    } else {
                        obj[a] = object[a];
                    }
                }
            });
        }

        return obj;
    }

    const attrs = (obj) => flatten(obj);

    const isShorthand = (config) => typeof(config) == 'string' || typeof(config) == 'number';

    const isObject = (obj) => obj !== undefined && obj !== null && obj.constructor === Object;

    const random = () => prefix(Math.round(Math.random() * 100000000) + '');